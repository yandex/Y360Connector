/* 
 * Telemost API v1
 *
 * API to create and manage video meetings and live streams in Yandex.Telemost
 *
 * OpenAPI spec version: 1.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Text;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace Y360OutlookConnector.Clients.Telemost.Model
{
    /// <summary>
    /// Live stream data. When missing no live stream is to be added or patched
    /// </summary>
    [DataContract]
    public class ConferenceDataLiveStream
    {
        /// <summary>
        /// Access restriction setting. Future added values will be treated as UNKNOWN for clients for backward compatibility
        /// </summary>
        /// <value>Access restriction setting. Future added values will be treated as UNKNOWN for clients for backward compatibility</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum AccessLevelEnum
        {
            /// <summary>
            /// Enum PUBLIC for value: PUBLIC
            /// </summary>
            [EnumMember(Value = "PUBLIC")]
            PUBLIC = 1,
            /// <summary>
            /// Enum ORGANIZATION for value: ORGANIZATION
            /// </summary>
            [EnumMember(Value = "ORGANIZATION")]
            ORGANIZATION = 2,
            /// <summary>
            /// Enum UNKNOWN for value: UNKNOWN
            /// </summary>
            [EnumMember(Value = "UNKNOWN")]
            UNKNOWN = 3
        }
        /// <summary>
        /// Access restriction setting. Future added values will be treated as UNKNOWN for clients for backward compatibility
        /// </summary>
        /// <value>Access restriction setting. Future added values will be treated as UNKNOWN for clients for backward compatibility</value>
        [DataMember(Name = "access_level", EmitDefaultValue = false)]
        public AccessLevelEnum? AccessLevel { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="ConferenceDataLiveStream" /> class.
        /// </summary>
        /// <param name="accessLevel">Access restriction setting. Future added values will be treated as UNKNOWN for clients for backward compatibility.</param>
        /// <param name="title">Title of live stream used on viewers page.</param>
        /// <param name="description">Description of live stream used on viewers page.</param>
        public ConferenceDataLiveStream(AccessLevelEnum? accessLevel = null, string title = null, string description = null)
        {
            AccessLevel = accessLevel;
            Title = title;
            Description = description;
        }


        /// <summary>
        /// Title of live stream used on viewers page
        /// </summary>
        /// <value>Title of live stream used on viewers page</value>
        [DataMember(Name = "title", EmitDefaultValue = false)]
        public string Title { get; set; }

        /// <summary>
        /// Description of live stream used on viewers page
        /// </summary>
        /// <value>Description of live stream used on viewers page</value>
        [DataMember(Name = "description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ConferenceDataLiveStream {\n");
            sb.Append("  AccessLevel: ").Append(AccessLevel).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }        
    }
}
